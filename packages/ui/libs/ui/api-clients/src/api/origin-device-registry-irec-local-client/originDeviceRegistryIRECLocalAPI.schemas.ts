/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Device Registry I-REC Local API
 * Swagger documentation for the Origin Device Registry I-REC Local API
 * OpenAPI spec version: 0.1
 */
export type DeviceState = 'Draft' | 'In-progress' | 'Rejected' | 'Approved';

export const DeviceState = {
  Draft: 'Draft' as DeviceState,
  Inprogress: 'In-progress' as DeviceState,
  Rejected: 'Rejected' as DeviceState,
  Approved: 'Approved' as DeviceState,
};

export interface PublicDeviceDTO {
  code: string;
  name: string;
  deviceType: string;
  fuel: string;
  countryCode: string;
  registrantOrganization: string;
  issuer: string;
  capacity: number;
  commissioningDate: string;
  registrationDate: string;
  address: string;
  latitude: string;
  longitude: string;
  notes: string;
  status: DeviceState;
  id: string;
  ownerId: string;
  timezone: string;
  gridOperator: string;
}

export interface CodeNameDTO {
  name: string;
  code: string;
}

export interface DeviceDTO {
  code: string;
  name: string;
  defaultAccount: string;
  deviceType: string;
  fuel: string;
  countryCode: string;
  registrantOrganization: string;
  issuer: string;
  capacity: number;
  commissioningDate: string;
  registrationDate: string;
  address: string;
  latitude: string;
  longitude: string;
  notes: string;
  status: DeviceState;
  id: string;
  ownerId: string;
  timezone: string;
  gridOperator: string;
}

export interface CreateDeviceDTO {
  name: string;
  defaultAccount: string;
  deviceType: string;
  fuel: string;
  countryCode: string;
  capacity: number;
  commissioningDate: string;
  registrationDate: string;
  address: string;
  latitude: string;
  longitude: string;
  notes: string;
  timezone: string;
  gridOperator: string;
}

export interface UpdateDeviceDTO {
  name: string;
  deviceType: string;
  fuel: string;
  countryCode: string;
  capacity: number;
  commissioningDate: string;
  registrationDate: string;
  address: string;
  latitude: string;
  longitude: string;
  notes: string;
  active: boolean;
}

export interface SuccessResponseDTO {
  success: boolean;
  message?: string;
}

export interface IrecDeviceDTO {
  code: string;
  name: string;
  defaultAccount: string;
  deviceType: string;
  fuel: string;
  countryCode: string;
  registrantOrganization: string;
  issuer: string;
  capacity: number;
  commissioningDate: string;
  registrationDate: string;
  address: string;
  latitude: string;
  longitude: string;
  notes: string;
  status: DeviceState;
}

export interface ImportIrecDeviceDTO {
  code: string;
  timezone: string;
  gridOperator: string;
}

export interface CreateConnectionDTO {
  userName: string;
  password: string;
  clientId: string;
  clientSecret: string;
}

export type IRECAccountType = 'Registrant' | 'Participant' | 'Both';

export const IRECAccountType = {
  Registrant: 'Registrant' as IRECAccountType,
  Participant: 'Participant' as IRECAccountType,
  Both: 'Both' as IRECAccountType,
};

export interface RegistrationDTO {
  accountType: IRECAccountType;
  headquarterCountry: string;
  registrationYear: number;
  employeesNumber: string;
  shareholders: string;
  website: string;
  activeCountries: string[];
  mainBusiness: string;
  ceoName: string;
  ceoPassportNumber: string;
  balanceSheetTotal: string;
  subsidiaries?: string;
  primaryContactOrganizationName: string;
  primaryContactOrganizationAddress: string;
  primaryContactOrganizationPostalCode: string;
  primaryContactOrganizationCountry: string;
  primaryContactName: string;
  primaryContactEmail: string;
  primaryContactPhoneNumber: string;
  primaryContactFax: string;
  leadUserTitle: string;
  leadUserFirstName: string;
  leadUserLastName: string;
  leadUserEmail: string;
  leadUserPhoneNumber: string;
  leadUserFax: string;
  id: string;
  owner: string;
}

export interface ConnectionDTO {
  accessToken: string;
  refreshToken: string;
  expiryDate: string;
  registration: RegistrationDTO;
}

export interface NewRegistrationDTO {
  accountType: IRECAccountType;
  headquarterCountry: string;
  registrationYear: number;
  employeesNumber: string;
  shareholders: string;
  website: string;
  activeCountries: string[];
  mainBusiness: string;
  ceoName: string;
  ceoPassportNumber: string;
  balanceSheetTotal: string;
  subsidiaries?: string;
  primaryContactOrganizationName: string;
  primaryContactOrganizationAddress: string;
  primaryContactOrganizationPostalCode: string;
  primaryContactOrganizationCountry: string;
  primaryContactName: string;
  primaryContactEmail: string;
  primaryContactPhoneNumber: string;
  primaryContactFax: string;
  leadUserTitle: string;
  leadUserFirstName: string;
  leadUserLastName: string;
  leadUserEmail: string;
  leadUserPhoneNumber: string;
  leadUserFax: string;
}

export interface RegisterResponseDTO {
  id: string;
}
