/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Exchange API
 * Swagger documentation for the Exchange API
 * OpenAPI spec version: 0.1
 */
export interface Asset {
  id: string;
  address: string;
  tokenId: string;
  deviceId: string;
  generationFrom: string;
  generationTo: string;
}

export interface AccountAssetDTO {
  asset: Asset;
  amount: string;
}

export interface AccountBalanceDTO {
  available: AccountAssetDTO[];
  locked: AccountAssetDTO[];
}

export type TransferStatus =
  | 'Unknown'
  | 'Accepted'
  | 'Unconfirmed'
  | 'Confirmed'
  | 'Error';

export const TransferStatus = {
  Unknown: 'Unknown' as TransferStatus,
  Accepted: 'Accepted' as TransferStatus,
  Unconfirmed: 'Unconfirmed' as TransferStatus,
  Confirmed: 'Confirmed' as TransferStatus,
  Error: 'Error' as TransferStatus,
};

export type TransferDirection = 'Deposit' | 'Withdrawal' | 'Claim';

export const TransferDirection = {
  Deposit: 'Deposit' as TransferDirection,
  Withdrawal: 'Withdrawal' as TransferDirection,
  Claim: 'Claim' as TransferDirection,
};

export interface Transfer {
  id: string;
  userId: string;
  asset: Asset;
  amount: string;
  transactionHash: string;
  address: string;
  status: TransferStatus;
  confirmationBlock: number;
  direction: TransferDirection;
}

export interface RequestWithdrawalDTO {
  assetId: string;
  address: string;
  amount: string;
}

export interface RequestClaimDTO {
  assetId: string;
  amount: string;
}

export interface AssetDTO {
  address: string;
  tokenId: string;
  deviceId: string;
  generationFrom: string;
  generationTo: string;
  id: string;
}

export interface AccountDTO {
  address: string;
}

export interface BundlePublicItemDTO {
  id: string;
  asset: Asset;
  startVolume: string;
  currentVolume: string;
}

export interface BundlePublicDTO {
  id: string;
  items: BundlePublicItemDTO[];
  available: string;
  volume: string;
  price: string;
}

export interface Bundle {
  id: string;
  userId: string;
  price: number;
  isCancelled: boolean;
  items: BundleItem[];
  available: string;
  volume: string;
}

export interface BundleItem {
  id: string;
  asset: Asset;
  startVolume: string;
  currentVolume: string;
  bundle: Bundle;
}

export interface BundleTradeItemDTO {
  assetId: number;
  volume: string;
}

export interface BundleTrade {
  id: string;
  buyerId: string;
  volume: string;
  bundle: Bundle;
  items: BundleTradeItemDTO[];
}

export interface BundleItemDTO {
  assetId: string;
  volume: string;
}

export interface CreateBundleDTO {
  price: number;
  items: BundleItemDTO[];
}

export interface BuyBundleDTO {
  bundleId: string;
  volume: string;
}

export interface BundleSplitItemDTO {
  id: string;
  volume: string;
}

export interface BundleSplitVolumeDTO {
  volume: string;
  items: BundleSplitItemDTO[];
}

export interface BundleSplitDTO {
  id: string;
  splits: BundleSplitVolumeDTO[];
}

export interface CreateSupplyDto {
  deviceId: string;
  active: boolean;
  price: number;
}

export interface SupplyDto {
  id: string;
  ownerId: string;
  deviceId: string;
  active: boolean;
  price: number;
}

export interface UpdateSupplyDto {
  active: boolean;
  price: number;
}
