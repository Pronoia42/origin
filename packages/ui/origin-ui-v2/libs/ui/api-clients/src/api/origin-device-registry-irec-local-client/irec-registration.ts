/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Device Registry I-REC Local API
 * Swagger documentation for the Origin Device Registry I-REC Local API
 * OpenAPI spec version: 0.1
 */
import {
  useQuery,
  useMutation,
  UseQueryOptions,
  UseMutationOptions,
} from 'react-query';
import type {
  RegistrationDTO,
  RegisterResponseDTO,
  NewRegistrationDTO,
} from './originDeviceRegistryIRECLocalAPI.schemas';
import { customMutator } from '../mutator/custom-mutator';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const registrationControllerGetRegistrations = <Data = unknown>() => {
  return customMutator<Data extends unknown ? RegistrationDTO[] : Data>({
    url: `/api/irec/registration`,
    method: 'get',
  });
};

export const getRegistrationControllerGetRegistrationsQueryKey = () => [
  `/api/irec/registration`,
];

export const useRegistrationControllerGetRegistrations = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  queryConfig?: UseQueryOptions<
    AsyncReturnType<typeof registrationControllerGetRegistrations>,
    Error
  >
) => {
  const queryKey = getRegistrationControllerGetRegistrationsQueryKey();

  const query = useQuery<
    AsyncReturnType<typeof registrationControllerGetRegistrations>,
    Error
  >(
    queryKey,
    () => registrationControllerGetRegistrations<Data>(),
    queryConfig
  );

  return {
    queryKey,
    ...query,
  };
};

export const registrationControllerRegister = <Data = unknown>(
  newRegistrationDTO: NewRegistrationDTO
) => {
  return customMutator<Data extends unknown ? RegisterResponseDTO : Data>({
    url: `/api/irec/registration`,
    method: 'post',
    data: newRegistrationDTO,
  });
};

export const useRegistrationControllerRegister = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  mutationConfig?: UseMutationOptions<
    AsyncReturnType<typeof registrationControllerRegister>,
    Error,
    { data: NewRegistrationDTO }
  >
) => {
  return useMutation<
    AsyncReturnType<typeof registrationControllerRegister>,
    Error,
    { data: NewRegistrationDTO }
  >((props) => {
    const { data } = props || {};

    return registrationControllerRegister<Data>(data);
  }, mutationConfig);
};
